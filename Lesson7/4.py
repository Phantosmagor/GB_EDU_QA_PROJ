"""
Задание 4.
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31 22
37 43
51 86

3 5 32
2 4 6
-1 64 -8

3 5 8 3
8 3 7 1

Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов класса Matrix (двух матриц).
 Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с
 первым элементом первой строки второй матрицы и т.д.
"""
import copy


class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix

    def __str__(self):
        s = ''
        for i in range(len(self.matrix)):
            s = s + '\t'.join(map(str, self.matrix[i])) + '\n'
        return s

    def __add__(self, other):
        if len(self.matrix) != len(other.matrix):
            return None
        res = copy.deepcopy(self.matrix)
        for i in range(len(self.matrix)):
            for k in range(len(self.matrix[i])):
                res[i][k] = self.matrix[i][k] + other.matrix[i][k]
        return Matrix(res)


l1 = [[31, 22], [37, 43], [51, 86]]  # 3x2 по дефолту
l2 = [[11, 21], [31, 41], [0, -15]]  # 3х2 по дефолту
# l1 = [[3, 5, 32], [2, 4, 6], [-1, 64, -8]]  #3х3
# l2 = [[0, 14, 15], [32, 99, -4], [3, 14, 15]] #3x3
# l1 = [[3, 5, 8, 3], [8, 3, 7, 1]]   #4x2
# l2 = [[0, -15, 0, 2], [15, 18, 90, 14]] #4#2
m = Matrix(l1)
s = Matrix(l2)
# h = Matrix(l3) #складывал 3 матрицы
print(m)
print(s)
# print(h)
z = m + s  # + h # складывал 3 матрицы
print(z)
